var _user$project$Main$view = function (model) {
	var screenText = (_elm_lang$core$Native_Utils.cmp((model.maxScreen / 2) | 0, model.mouseX) > 0) ? 'Left' : 'Right';
	return _elm_lang$html$Html$text(screenText);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'SetMouseX') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{mouseX: _p0._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{maxScreen: _p0._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {mouseX: a, maxScreen: b};
	});
var _user$project$Main$SetMaxScreen = function (a) {
	return {ctor: 'SetMaxScreen', _0: a};
};
var _user$project$Main$getInitialWindow = A3(
	_elm_lang$core$Task$perform,
	function (x) {
		return _user$project$Main$SetMaxScreen(500);
	},
	function (maxScreen) {
		return _user$project$Main$SetMaxScreen(maxScreen);
	},
	_elm_lang$window$Window$width);
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {mouseX: 0, maxScreen: 0},
	_1: _user$project$Main$getInitialWindow
};
var _user$project$Main$SetMouseX = function (a) {
	return {ctor: 'SetMouseX', _0: a};
};
var _user$project$Main$subscriptions = function (_p1) {
	return _elm_lang$mouse$Mouse$moves(
		function (position) {
			return _user$project$Main$SetMouseX(position.x);
		});
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
